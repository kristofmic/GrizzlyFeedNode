!function(a){function b(a){return a._}var c,d=[];c=["$window",b],a.module("nl.Vendor.LoDash",d).factory("_",c)}(angular),function(a){var b;b=["satellizer","http-auth-interceptor","ui.bootstrap","nl.Vendor.LoDash"],a.module("nl.User",b).constant("USER_EVENT",{LOGOUT:"USER:LOGOUT"})}(angular),function(a){function b(b,c,d,e,f,g,h,i){function j(){var a=t();return a?d.get("/api/session",{headers:{token:a}}).then(r):u}function k(a){return e.signup(a).then(r)}function l(a){var b=t();return b?d.put("/api/users",a,{headers:{token:b}}).then(r):u}function m(a){return e.login(a).then(r).then(q)}function n(){var a=t();a&&d.delete("/api/sessions",{headers:{token:a}}),c.$broadcast(i.LOGOUT),s(),e.logout()}function o(a){return d.put("/api/users/reset_password",a)}function p(){var a;a={templateUrl:"login_modal.html",backdrop:"static",keyboard:!1,controller:"loginModalController"},g.open(a)}function q(){function a(a){return a.headers.token=t(),a}f.loginConfirmed(null,a)}function r(b){return b.data&&a.isObject(b.data)&&h.extend(u.model,b.data),u}function s(){u.model={}}function t(){return b.localStorage.nl_token}var u={};return c.$on("event:auth-loginRequired",p),u.init=j,u.create=k,u.update=l,u.login=m,u.logout=n,u.resetPassword=o,u.token=t,u.model={},u}var c;c=["$window","$rootScope","$http","$auth","authService","$modal","_","USER_EVENT",b],a.module("nl.User").factory("user",c)}(angular),function(a){var b;b=["ui.router"],a.module("nl.ActiveNav",b)}(angular),function(a){function b(a){function b(b,c){function d(a,d,e,f){d.name===b.targetState?c.addClass("active"):f.name===b.targetState&&c.removeClass("active")}b.$on("$stateChangeSuccess",d),d(null,a.current,null,{})}return{restrict:"AC",link:b,scope:{targetState:"@nlActiveNav"}}}var c;c=["$state",b],a.module("nl.ActiveNav").directive("nlActiveNav",c)}(angular),function(a){var b;b=[],a.module("nl.InfiniteScroll",b).constant("SCROLL_EVENT",{MET:"nl.InfiniteScroll:events:met",REGISTER:"nl.InfiniteScroll:events:register",REMOVE:"nl.InfiniteScroll:events:remove"})}(angular),function(a){function b(a,b,c){function d(d,e){function f(){h(),b.on("scroll",g)}function g(){a.scrollY+i>=e[0].offsetTop&&(d.$emit(c.MET),h())}function h(){b.off("scroll",g)}var i=a.innerHeight;f(),d.$on(c.REGISTER,f),d.$on(c.REMOVE,h)}return d}var c;c=["$window","$document","SCROLL_EVENT",b],a.module("nl.InfiniteScroll").directive("nlInfiniteScroll",c)}(angular),function(a){var b;b=["ch.Snackbar"],a.module("nl.Messenger",b)}(angular),function(a){function b(b){function c(c){c&&c.data&&(c=a.fromJson(c.data)),c="string"==typeof c?c:d.error,b.error(c)}var d;return d={error:"There was a problem processing your request. Please try again."},{handleError:c}}var c;c=["snackbar",b],a.module("nl.Messenger").factory("messenger",c)}(angular),function(a){var b;b=["ui.router","ui.bootstrap","ch.Validator","ch.Snackbar","nl.Messenger","nl.User"],a.module("nl.Session",b)}(angular),function(a){function b(a,b,c,d,e,f){function g(){e.success("Thank you for verifying your email! You may now login."),b.go("main.public.login",null,{location:"replace"})}function h(a){f.handleError(a),b.go("main.public.login",null,{location:"replace"})}d.put("/api/users/verify_email",{verificationToken:c.verificationToken}).then(g)["catch"](h)}var c;c=["$scope","$state","$stateParams","$http","snackbar","messenger",b],a.module("nl.Session").controller("emailVerificationController",c)}(angular),function(a){function b(a,b,c,d,e,f,g){function h(h,i){function j(){e.success("Your password has been reset. You may now login."),b.go("main.public.login",null,{location:"replace"})}a.$broadcast(g.VALIDATE),h.$valid&&(e.loading("Processing. Please wait."),d.resetPassword({resetToken:c.resetToken,password:i}).then(j)["catch"](f.handleError))}a.submit=h}var c;c=["$scope","$state","$stateParams","user","snackbar","messenger","VALIDATION_EVENT",b],a.module("nl.Session").controller("forgotPasswordController",c)}(angular),function(a){function b(a,b,c,d,e,f){function g(a){function b(){d.success("A link to reset your password has been sent to your email.")}a&&(d.loading("Processing. Please wait."),c.post("/api/sessions/forgot_password",{email:a}).then(b).then(f.close)["catch"](e.handleError))}a.submit=g,a.dismiss=f.dismiss}var c;c=["$scope","$state","$http","snackbar","messenger","$modalInstance",b],a.module("nl.Session").controller("forgotPasswordModalController",c)}(angular),function(a){function b(a,b,c,d,e,f,g){function h(b,c){a.$broadcast(g.VALIDATE),b.$valid&&d.login(c)["catch"](f.handleError)}function i(){var a;a={templateUrl:"forgot_password_modal.html",backdrop:!0,keyboard:!0,controller:"forgotPasswordModalController"},c.open(a)}a.credentials={},a.submit=h,a.forgotPassword=i}var c;c=["$scope","$state","$modal","user","snackbar","messenger","VALIDATION_EVENT",b],a.module("nl.Session").controller("loginController",c)}(angular),function(a){function b(a,b,c,d,e,f,g){function h(b){a.$broadcast(f.VALIDATE),b.$valid&&c.login(a.credentials).then(g.close)["catch"](e.handleError)}function i(){c.logout(),g.dismiss(),b.go("main.public.login")}a.credentials={},a.submit=h,a.dismiss=i}var c;c=["$scope","$state","user","snackbar","messenger","VALIDATION_EVENT","$modalInstance",b],a.module("nl.Session").controller("loginModalController",c)}(angular),function(a){function b(a,b,c,d){c.logout(),d.success("Successfully logged out."),b.go("main.public.login",null,{location:"replace"})}var c;c=["$scope","$state","user","snackbar",b],a.module("nl.Session").controller("logoutController",c)}(angular),function(a){var b;b=["ui.router","ch.Snackbar","ch.Validator","nl.User"],a.module("nl.Signup",b)}(angular),function(a){function b(a,b,c,d,e,f){function g(b,g){function h(){d.success("An email has been sent to your address for verification. Please verify before logging in.")}a.$broadcast(c.VALIDATE),b.$valid&&(d.loading("Processing. Please wait."),f.create(g).then(h)["catch"](e.handleError))}a.credentials={},a.submit=g}var c;c=["$scope","$state","VALIDATION_EVENT","snackbar","messenger","user",b],a.module("nl.Signup").controller("signupController",c)}(angular),function(a){var b;b=["nl.Vendor.LoDash","ch.Snackbar","ui.sortable","ui.bootstrap","nl.Messenger","nl.User"],a.module("nl.Feeds",b)}(angular),function(a){function b(b,c,d,e,f,g){function h(a){function c(a){return e.create(a).then(function(){a.added=!0,a.subscribers+=1})}function h(){b.feedUrl="",f.success("Your feed was successfully added.")}f.loading("Processing. Please wait."),d.create(a).then(c).then(h)["catch"](g.handleError)}function i(a){function b(){a.added=!0,a.subscribers+=1,f.success("The feed was successfully added.")}e.create(a).then(b)["catch"](g.handleError)}function j(a){function b(){a.added=!1,a.subscribers-=1,f.success("The feed was successfully removed.")}e.destroy(a).then(b)["catch"](g.handleError)}function k(b,c){c?a.element(b.target).addClass("fa-times").removeClass("fa-check"):a.element(b.target).addClass("fa-check").removeClass("fa-times")}d.init().then(function(a){b.finishedLoading=!0,b.feeds=a.model}),b.addFeed=h,b.addUserFeed=i,b.removeUserFeed=j,b.toggleRemove=k}var c;c=["$scope","_","feeds","userFeeds","snackbar","messenger",b],a.module("nl.Feeds").controller("addFeedsController",c)}(angular),function(a){function b(a,b,c,d,e,f,g){function h(b){function h(){var b=a.feedToEdit.userFeed.col;e.remove(a.userFeeds.feeds[b],a.feedToEdit)}function i(b){a.feedToEdit.feed.entries=b.data.feed.entries}function j(){a.feedToEdit=void 0}function k(a){return function(){c.success(a)}}return c.loading("Processing. Please wait."),b?f.destroy(a.feedToEdit.feed).then(h).then(j).then(d.close).then(k("The feed was successfully removed."))["catch"](g.handleError):f.updateEntries(a.feedToEdit).then(i).then(j).then(d.close).then(k("The feed was successfully updated."))["catch"](g.handleError)}a.save=h,a.dismiss=d.dismiss}var c;c=["$scope","$http","snackbar","$modalInstance","_","userFeeds","messenger",b],a.module("nl.Feeds").controller("editFeedModalController",c)}(angular),function(a){function b(b,c,d,e,f){function g(){function b(b){function c(a){a.added=!!d.find(g,{feed:a._id}),j.model.push(a)}var f=b.data,g=e.model.feeds;return f&&a.isObject(f)&&(f=a.isArray(f)?f:[f],d.each(f,c)),j}return i(),c.get("/api/feeds",{headers:{token:e.token()}}).then(b)}function h(b){function d(b){var c=b.data;return c&&a.isObject(c)&&j.model.push(c),c}return c.post("/api/feeds",{url:b},{headers:{token:e.token()}}).then(d)}function i(){j.model=[]}var j={};return b.$on(f.LOGOUT,i),j.init=g,j.create=h,j.model=[],j}var c;c=["$rootScope","$http","_","user","USER_EVENT",b],a.module("nl.Feeds").factory("feeds",c)}(angular),function(a){function b(a,b,c,d,e,f,g){function h(b){var c,d,e=b.source.itemScope.modelValue,f=e.userFeed.col,g=e.userFeed.row,h=b.dest.sortableScope.modelValue.col;for(e.userFeed.col=h,e.userFeed.row=b.dest.index+1,c=e.userFeed.row,d=a.userFeeds.feeds[h].length;d>c;c++)a.userFeeds.feeds[h][c].userFeed.row+=1;for(c=g-1,d=a.userFeeds.feeds[f].length;d>c;c++)a.userFeeds.feeds[f][c].userFeed.row-=1;j()}function i(b){for(var c=b.dest.sortableScope.modelValue.col,d=0,e=a.userFeeds.feeds[c].length;e>d;d++)a.userFeeds.feeds[c][d].userFeed.row=d+1;j()}function j(){function b(a){return{userFeed:a.userFeed,feed:{_id:a.feed._id}}}userFeedsToUpdate=c.map(a.userFeeds.feeds[0].concat(a.userFeeds.feeds[1]).concat(a.userFeeds.feeds[2]),b),e.updatePositions(userFeedsToUpdate)}function k(a){l(a),a.expand=!a.expand}function l(a){a.visited||(e.visitEntry(a),a.visited=!0)}function m(c){var d;a.feedToEdit=c,d={templateUrl:"edit_feed_modal.html",backdrop:"static",keyboard:!1,controller:"editFeedModalController",scope:a},b.open(d)}function n(){function b(){a.userFeeds.lastUpdated=new Date}function c(){a.refreshing=!1}f.loading("Updating. Please wait."),a.refreshing=!0,e.refresh().then(b).then(p("Feeds are up to date."))["catch"](g.handleError)["finally"](c)}function o(b){a.layout!==b&&(d.update({layout:b}),a.layout=b)}function p(a){return function(){f.success(a)}}e.init().then(function(){a.finishedLoading=!0}),a.userFeeds=e.model,a.layout=d.model.layout,a.sortableConfig={itemMoved:h,orderChanged:i,containment:"#feed-container"},a.expand=k,a.markAsVisited=l,a.editFeed=m,a.refreshFeeds=n,a.updateLayout=o}var c;c=["$scope","$modal","_","user","userFeeds","snackbar","messenger",b],a.module("nl.Feeds").controller("feedsController",c)}(angular),function(a){function b(b,c,d,e,f){function g(){function b(b){function c(a){var b=new Date(a.feed.updatedAt);return b<q.model.lastUpdated&&(q.model.lastUpdated=b),a.userFeed.col}var e=b.data;return e&&a.isObject(e)&&(q.model.feeds=e,q.model.lastUpdated=new Date,q.model.feeds=d.groupBy(q.model.feeds,c),q.model.feeds[0]=q.model.feeds[0]||[],q.model.feeds[1]=q.model.feeds[1]||[],q.model.feeds[2]=q.model.feeds[2]||[],q.model.feeds[0].col=0,q.model.feeds[1].col=1,q.model.feeds[2].col=2),q}return p(),c.get("/api/user_feeds",{headers:{token:e.token()}}).then(b)}function h(a){return c.post("/api/user_feeds",{feedId:a._id},{headers:{token:e.token()}}).then(o)}function i(a){return c.put("/api/user_feeds/positions",{feeds:a},{headers:{token:e.token()}})}function j(a){return c.put("/api/user_feeds/entries",{feedId:a.feed._id,entries:a.userFeed.entries},{headers:{token:e.token()}})}function k(){function a(a){function b(a,b){function c(a){e.feed.entries.pop(),e.feed.entries.unshift(a)}var e=n(b);d.eachRight(a,c)}var c=a.data;d.each(c,b)}return c.get("/api/user_feeds/refresh",{headers:{token:e.token()}}).then(a)}function l(a){return c.delete("/api/user_feeds/"+a._id,{headers:{token:e.token()}}).then(o)}function m(a){return c.post("/api/user_feed_entries/",{entryId:a._id},{headers:{token:e.token()}})}function n(a){function b(b){function e(b){return b.feed._id===a}return c=d.find(b,e),c?!1:void 0}var c;return d.each(q.model.feeds,b),c}function o(b){var c=b.data;return c&&a.isObject(c)&&(e.model.feeds=c.feeds),q}function p(){q.model={}}var q={};return b.$on(f.LOGOUT,p),q.init=g,q.create=h,q.updatePositions=i,q.updateEntries=j,q.destroy=l,q.visitEntry=m,q.refresh=k,q.model={},q}var c;c=["$rootScope","$http","_","user","USER_EVENT",b],a.module("nl.Feeds").factory("userFeeds",c)}(angular),function(a){var b;b=["nl.Vendor.LoDash"],a.module("nl.Entries",b)}(angular),function(a){function b(a,b){function c(){return f(),a.get("/api/entries").then(e)}function d(b){return a.get("/api/entries?offset="+b).then(e)}function e(a){function c(a){g.model[h].push(a),3===(h+=1)&&(h=0)}return a&&a.data&&b.each(a.data,c),g}function f(){g.model=[[],[],[]]}var g={},h=0;return g.init=c,g.get=d,g.model=[[],[],[]],g}var c;c=["$http","_",b],a.module("nl.Entries").factory("entries",c)}(angular),function(a){var b;b=["ch.Validator","ch.Snackbar","nl.Messenger","nl.User"],a.module("nl.Account",b)}(angular),function(a){function b(a,b,c,d,e){function f(f,g){function h(){d.success("Password successfully updated."),a.changePassword=!1,a.credentials={},a.newPasswordConfirmation=""}a.$broadcast(c.VALIDATE),f.$valid&&(d.loading("Processing. Please wait."),b.update(g).then(h)["catch"](e.handleError))}a.user=b.model,a.credentials={},a.submit=f}var c;c=["$scope","user","VALIDATION_EVENT","snackbar","messenger",b],a.module("nl.Account").controller("accountController",c)}(angular),function(a){var b;b=["nl.Entries","nl.InfiniteScroll"],a.module("nl.Home",b)}(angular),function(a){function b(a,b,c){function d(){c.get(h*g++).then(e)}function e(){a.$broadcast(b.REGISTER)}function f(){a.$broadcast(b.REMOVE)}var g=1,h=25;c.init().then(function(b){a.entries=b.model}),a.$on(b.MET,d),a.$on("$stateChangeStart",f)}var c;c=["$scope","SCROLL_EVENT","entries",b],a.module("nl.Home").controller("homeController",c)}(angular),function(a){var b;b=["ui.router","satellizer"],a.module("nl.States",b)}(angular),function(a){function b(a,b){b.rule(d).otherwise("/home"),a.state("main",{"abstract":!0,templateUrl:"main.html",controller:"mainController",resolve:{userInit:["user",function(a){return a.init()}]}}).state("main.public",{"abstract":!0,template:"<div ui-view></div>",data:{auth:!1}}).state("main.public.home",{url:"/home",templateUrl:"home.html",controller:"homeController"}).state("main.public.login",{url:"/login",templateUrl:"login.html",controller:"loginController"}).state("main.public.signup",{url:"/signup",templateUrl:"signup.html",controller:"signupController"}).state("main.public.forgotPassword",{url:"/forgot_password/:resetToken",templateUrl:"forgot_password.html",controller:"forgotPasswordController"}).state("main.public.emailVerification",{url:"/email_verification/:verificationToken",controller:"emailVerificationController"}).state("main.private",{"abstract":!0,template:"<div ui-view></div>",data:{auth:!0}}).state("main.private.logout",{url:"/logout",controller:"logoutController"}).state("main.private.feeds",{url:"/feeds",templateUrl:"feeds.html",controller:"feedsController"}).state("main.private.addFeeds",{url:"/add",templateUrl:"add_feeds.html",controller:"addFeedsController"}).state("main.private.account",{url:"/account",templateUrl:"account.html",controller:"accountController"})}function c(a,b,c){function d(a,d){d.data.auth&&!c.isAuthenticated()&&(a.preventDefault(),b.go("main.public.login",null,{location:"replace"}))}a.$on("$stateChangeStart",d)}function d(a,b){function c(){return d===f||d===g}var d=b.path(),e=a.get("$auth"),f="/login",g="/signup";e.isAuthenticated()&&c()&&b.path("/home").replace()}var e,f;e=["$stateProvider","$urlRouterProvider",b],f=["$rootScope","$state","$auth",c],a.module("nl.States").config(e).run(f)}(angular),angular.module("nl.Templates",[]).run(["$templateCache",function(a){"use strict";a.put("account.html",'<div class="row"><div class="col-sm-6"><h2 class="page-heading"><small>{{user.email}}</small></h2></div><div class="col-sm-6"><p class="text-right"><small>Member since: {{user.createdAt | date:\'longDate\'}}</small></p></div></div><div class="divider"></div><div class="row"><div class="col-sm-12 account-section"><div class="col-md-2 hidden-sm hidden-xs"><h5><strong>Password</strong></h5></div><div class="col-sm-2"><button class="btn btn-link" ng-click="changePassword = !changePassword">Change password</button></div><div class="col-md-8 col-sm-10"><form class="form-inline" role="form" name="passwordForm" novalidate ng-show="changePassword" ng-submit="submit(passwordForm, credentials)"><div class="form-group"><label class="sr-only" for="password">Current password</label><input type="password" class="form-control" id="password" placeholder="Current password" ng-model="credentials.password" ch-validator="required password"></div><div class="form-group"><label class="sr-only" for="newPassword">New password</label><input type="password" class="form-control" id="newPassword" placeholder="New password" ng-model="credentials.newPassword" ch-validator="required password"></div><div class="form-group"><label class="sr-only" for="newPasswordConfirmation">Password confirmation</label><input type="password" class="form-control" id="newPasswordConfirmation" placeholder="Password confirmation" ng-model="newPasswordConfirmation" ch-validator="required password confirm:credentials.newPassword"></div><button type="submit" class="btn btn-default">Change</button></form></div></div></div>'),a.put("_feed_item.html",'<div class="panel panel-default"><div class="panel-heading"><h5 class="panel-title"><a ng-href="{{userFeed.feed.link}}" target="_blank">{{userFeed.feed.title}}</a></h5><div class="feed-icons"><span class="handle feed-icon" sortable-item-handle><span class="handlebar"></span> <span class="handlebar"></span> <span class="handlebar"></span> <span class="handlebar"></span> <span class="handlebar"></span> <span class="handlebar"></span> <span class="handlebar"></span> <span class="handlebar"></span></span> <i class="fa fa-cog feed-icon" ng-click="editFeed(userFeed)"></i></div></div><div class="panel-body"><ol class="list-unstyled feed-entries"><li ng-repeat="entry in userFeed.feed.entries" class="feed-entry"><div class="entry-read-icons"><i class="fa fa-play expand" ng-class="{\'fa-rotate-90\':entry.expand}" ng-click="expand(entry)"></i> <i class="fa fa-eye-slash read" ng-click="markAsVisited(entry)"></i></div><div class="entry-snapshot"><a ng-href="{{entry.link}}" class="entry-title" ng-class="{visited: entry.visited}" target="_blank" ng-click="markAsVisited(entry)">{{entry.title}}</a><p class="entry-meta"><small>{{entry.pubdate | date:"EEE MMM d, y \'at\' h:mm a"}} <span ng-if="entry.author">| {{entry.author}}</span> <span class="entry-feed-title">| via <a ng-href="{{userFeed.feed.link}}">{{userFeed.feed.title}}</a></span></small></p><p class="entry-meta"><small class="entry-categories-separator" ng-if="entry.categories.length">|</small> <small class="entry-category" ng-repeat="category in entry.categories | limitTo:3">#{{category}}</small></p></div><p class="entry-summary clearfix" ng-show="entry.expand" ng-bind-html="entry.description || entry.summary"></p></li></ol></div></div>'),a.put("add_feeds.html",'<div class="row"><div class="col-sm-6 hidden-xs"><h2 class="page-heading"><small>Find & Add Feeds</small></h2></div><div class="col-sm-6 col-xs-12" id="new-form-feeds-container"><div class="new-forms" ng-class="{toggle:toggle}"><i class="fa fa-link new-form-toggle" ng-click="toggle = !toggle"></i><form class="form-horizontal" name="searchForm" role="form" novalidate><div class="form-group"><div class="input-group"><input type="text" class="form-control" placeholder="Search feeds" ng-model="search"> <span class="input-group-btn"><button class="btn btn-default" type="submit"><i class="fa fa-search"></i></button></span></div><!-- /input-group --></div></form><i class="fa fa-search new-form-toggle" ng-click="toggle = !toggle"></i><form class="form-horizontal" name="addForm" role="form" novalidate ng-submit="addFeed(feedUrl)"><div class="form-group"><div class="input-group"><input type="text" class="form-control" placeholder="Add a feed URL" ng-model="feedUrl"> <span class="input-group-btn"><button class="btn btn-default" type="submit"><i class="fa fa-link"></i></button></span></div><!-- /input-group --></div></form></div></div></div><div class="divider"></div><div class="row" ng-if="!finishedLoading"><div ng-include="\'_loading.html\'"></div></div><div class="row"><div class="col-sm-12"><ul class="list-unstyled new-feeds"><li class="new-feed col-sm-3" ng-repeat="feed in feeds | orderBy:\'title\' | filter:search"><div class="panel panel-default"><div class="panel-heading"><h5 class="panel-title"><a ng-href="{{feed.link}}" target="_blank">{{feed.title}}</a></h5><span ng-switch="feed.added"><i class="fa fa-check pull-right" ng-switch-when="true" ng-click="removeUserFeed(feed)" ng-mouseenter="toggleRemove($event, true)" ng-mouseleave="toggleRemove($event, false)"></i> <i class="fa fa-plus pull-right" ng-switch-when="false" ng-click="addUserFeed(feed)"></i></span></div><div class="panel-body"><ul class="list-unstyled"><li><small ng-pluralize count="feed.subscribers" when="{\'one\': \'{} subscriber\', \'other\': \'{} subscribers\'}"></small></li><li><small>Last updated {{feed.updatedAt | date:"EEE MMM d, y \'at\' h:mm a"}}</small></li><li><a ng-href="{{feed.xmlurl}}" target="_blank"><small>{{feed.xmlurl}}</small></a></li></ul></div></div></li></ul></div></div>'),a.put("edit_feed_modal.html",'<div class="modal-header"><h4 class="modal-title">{{feedToEdit.feed.title}}</h4></div><div class="modal-body"><div class="row"><div class="col-sm-3"><h5><strong>Entries to Display</strong></h5></div><div class="col-sm-9"><div class="form-group"><label for="display-entries" class="sr-only">Entries to display</label><select id="display-entries" class="form-control" ng-model="feedToEdit.userFeed.entries"><option value="1">1</option><option value="2">2</option><option value="3">3</option><option value="4">4</option><option value="5">5</option><option value="6">6</option><option value="7">7</option><option value="8">8</option><option value="9">9</option><option value="10">10</option><option value="15">15</option><option value="20">20</option><option value="25">25</option></select></div></div></div><div class="row"><div class="col-sm-3"><h5><strong>Remove Feed</strong></h5></div><div class="col-sm-9"><div class="checkbox"><label><input type="checkbox" ng-model="removeUserFeed"> Remove feed</label><p class="text-danger" ng-show="removeUserFeed"><small>This feed will be removed from you feeds page. If you change your mind, you can add it back later.</small></p></div></div></div></div><div class="modal-footer"><button type="button" class="btn btn-default" ng-click="dismiss()">Close</button> <button type="button" class="btn btn-primary" ng-click="save(removeUserFeed)">Save changes</button></div>'),a.put("feeds.html",'<div id="feed-container"><div class="row"><div class="col-sm-4"><i class="fa fa-th feed-layout-option" ng-class="{active:layout === \'th\'}" ng-click="updateLayout(\'th\')"></i> <i class="fa fa-th-large feed-layout-option" ng-class="{active:layout === \'thLarge\'}" ng-click="updateLayout(\'thLarge\')"></i> <i class="fa fa-list feed-layout-option" ng-class="{active:layout === \'list\'}" ng-click="updateLayout(\'list\')"></i></div><div class="col-sm-4 col-sm-offset-4"><button type="button" id="refresh" class="btn btn-default pull-right" ng-click="refreshFeeds()" ng-disabled="refreshing"><i class="fa fa-refresh"></i></button> <small class="refresh-text pull-right">Last updated: {{ userFeeds.lastUpdated | date:"EEE MMM d, y \'at\' h:mm a" }}</small></div></div><div class="row" ng-if="!finishedLoading"><div ng-include="\'_loading.html\'"></div></div><div class="row"><div class="col-sm-4 user-feed-column layout-{{layout}}"><ul class="user-feeds list-unstyled" data-sortable="sortableConfig" ng-model="userFeeds.feeds[0]"><li ng-repeat="userFeed in userFeeds.feeds[0]" ng-include="\'_feed_item.html\'" sortable-item class="{{layout}}-view"></li></ul></div><div class="col-sm-4 user-feed-column layout-{{layout}}"><ul class="user-feeds list-unstyled" data-sortable="sortableConfig" ng-model="userFeeds.feeds[1]"><li ng-repeat="userFeed in userFeeds.feeds[1]" ng-include="\'_feed_item.html\'" sortable-item class="{{layout}}-view"></li></ul></div><div class="col-sm-4 user-feed-column layout-{{layout}}"><ul class="user-feeds list-unstyled" data-sortable="sortableConfig" ng-model="userFeeds.feeds[2]"><li ng-repeat="userFeed in userFeeds.feeds[2]" ng-include="\'_feed_item.html\'" sortable-item class="{{layout}}-view"></li></ul></div></div></div>'),a.put("_entry_item.html",'<div class="panel panel-default"><div class="panel-body"><div class="entry-snapshot"><a ng-href="{{entry.link}}" class="entry-title" target="_blank">{{entry.title}}</a><p class="entry-meta"><small>{{entry.pubdate | date:"EEE MMM d, y \'at\' h:mm a"}} <span ng-if="entry.author">| {{entry.author}}</span></small></p><p class="entry-meta"><small class="entry-categories" ng-repeat="category in entry.categories | limitTo:3">#{{category}}</small></p></div><p class="entry-summary" ng-bind-html="entry.summary || entry.description"></p></div></div>'),a.put("home.html",'<div class="row"><div class="col-sm-4 home-entries-column"><ul class="home-entries list-unstyled"><li ng-repeat="entry in entries[0]" ng-include="\'_entry_item.html\'"></li><div ng-include="\'_loading.html\'" nl-infinite-scroll></div></ul></div><div class="col-sm-4 home-entries-column"><ul class="home-entries list-unstyled"><li ng-repeat="entry in entries[1]" ng-include="\'_entry_item.html\'"></li></ul><div ng-include="\'_loading.html\'" nl-infinite-scroll></div></div><div class="col-sm-4 home-entries-column"><ul class="home-entries list-unstyled"><li ng-repeat="entry in entries[2]" ng-include="\'_entry_item.html\'"></li></ul><div ng-include="\'_loading.html\'" nl-infinite-scroll></div></div></div>'),a.put("main.html",'<div ng-include="\'_header.html\'"></div><div class="container" ui-view></div>'),a.put("_header.html",'<nav class="navbar navbar-default navbar-fixed-top" role="navigation"><div class="container"><div class="navbar-header"><button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#nav-links"><span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span></button> <a class="navbar-brand" href="/">Grizzly Feed <img src="/images/grizzly_feed_logo_bear.png"></a></div><div class="collapse navbar-collapse" id="nav-links"><ul class="nav navbar-nav navbar-right" ng-switch="isAuthenticated()"><li ng-switch-when="true" nl-active-nav="main.private.feeds"><a ui-sref="main.private.feeds"><i class="fa fa-newspaper-o fa-lg"></i></a></li><li ng-switch-when="true" nl-active-nav="main.private.addFeeds"><a ui-sref="main.private.addFeeds"><i class="fa fa-search-plus fa-lg"></i></a></li><li ng-switch-when="true" nl-active-nav="main.private.account"><a ui-sref="main.private.account"><i class="fa fa-user fa-lg"></i></a></li><li ng-switch-when="true"><a ui-sref="main.private.logout"><i class="fa fa-sign-out fa-lg"></i></a></li><li ng-switch-when="true"><p class="navbar-text">{{user.model.email}}</p></li><li ng-switch-when="false" nl-active-nav="main.public.signup"><a ui-sref="main.public.signup">Sign up</a></li><li ng-switch-when="false" nl-active-nav="main.public.login"><a ui-sref="main.public.login">Login</a></li></ul></div></div></nav>'),a.put("_loading.html",'<div class="loading-spinner"><div class="loading-spinner-container loading-spinner-container1"><div class="loading-spinner-circle1"></div><div class="loading-spinner-circle2"></div><div class="loading-spinner-circle3"></div><div class="loading-spinner-circle4"></div></div><div class="loading-spinner-container loading-spinner-container2"><div class="loading-spinner-circle1"></div><div class="loading-spinner-circle2"></div><div class="loading-spinner-circle3"></div><div class="loading-spinner-circle4"></div></div></div>'),a.put("forgot_password.html",'<div class="row"><div class="col-sm-8 col-sm-offset-2"><h2><small>Enter a new password</small></h2></div></div><div class="row"><div class="col-sm-8 col-sm-offset-2"><div class="panel panel-default"><div class="panel-body"><form name="forgotPasswordForm" class="form-horizontal" ng-submit="submit(forgotPasswordForm, password)" novalidate><div class="form-group"><label for="password" class="control-label sr-only">Password</label><div class="col-sm-10 col-sm-offset-1"><input type="password" id="password" name="password" class="form-control" placeholder="Password" ng-model="password" ch-validator="required password"></div></div><div class="form-group"><label for="passwordConfirmation" class="control-label sr-only">Password Confirmation</label><div class="col-sm-10 col-sm-offset-1"><input type="password" id="passwordConfirmation" name="passwordConfirmation" class="form-control" placeholder="Re-enter Password" ng-model="passwordConfirmation" ch-validator="required password confirm:password"></div></div><div class="form-group"><div class="col-sm-10 col-sm-offset-1"><button type="submit" class="btn btn-primary">Reset</button> <a class="btn btn-link" ui-sref="main.public.login">Log in</a></div></div></form></div></div></div></div>'),a.put("forgot_password_modal.html",'<div class="modal-header"><h4 class="modal-title">Please enter your email address</h4></div><div class="modal-body"><form name="forgotPasswordForm" class="form-horizontal" ng-submit="submit(email)" novalidate><div class="form-group"><label for="email" class="control-label sr-only">Email Address</label><div class="col-sm-10 col-sm-offset-1"><input type="email" id="email" name="email" class="form-control" placeholder="Email address" ng-model="email" ch-validator="email"></div></div><div class="form-group"><div class="col-sm-10 col-sm-offset-1"><button type="submit" class="btn btn-primary">Reset</button> <button type="button" class="btn btn-default" ng-click="dismiss()">Cancel</button></div></div></form></div>'),a.put("login.html",'<div class="row"><div class="col-sm-8 col-sm-offset-2"><h2><small>Login</small></h2></div></div><div class="row"><div class="col-sm-8 col-sm-offset-2"><div class="panel panel-default"><div class="panel-body"><form name="loginForm" class="form-horizontal" ng-submit="submit(loginForm, credentials)" novalidate><div class="form-group"><label for="email" class="control-label sr-only">Email Address</label><div class="col-sm-10 col-sm-offset-1"><input type="email" id="email" name="email" class="form-control" placeholder="Email address" ng-model="credentials.email" ch-validator="required email"></div></div><div class="form-group"><label for="password" class="control-label sr-only">Password</label><div class="col-sm-10 col-sm-offset-1"><input type="password" id="password" name="password" class="form-control" placeholder="Password" ng-model="credentials.password" ch-validator="required password"></div></div><div class="form-group"><div class="col-sm-10 col-sm-offset-1"><button type="submit" class="btn btn-primary">Login</button> <button type="button" class="btn btn-link" ng-click="forgotPassword()">Forgot password</button></div></div></form></div></div></div></div>'),a.put("login_modal.html",'<div class="modal-header"><h4 class="modal-title">Please login again to verify your identity</h4></div><div class="modal-body"><form name="loginForm" class="form-horizontal" ng-submit="submit(loginForm, email, password)" novalidate><div class="form-group"><label for="email" class="control-label sr-only">Email Address</label><div class="col-sm-10 col-sm-offset-1"><input type="email" id="email" name="email" class="form-control" placeholder="Email address" ng-model="credentials.email" ch-validator="required email"></div></div><div class="form-group"><label for="password" class="control-label sr-only">Password</label><div class="col-sm-10 col-sm-offset-1"><input type="password" id="password" name="password" class="form-control" placeholder="Password" ng-model="credentials.password" ch-validator="required password"></div></div><div class="form-group"><div class="col-sm-10 col-sm-offset-1"><button type="submit" class="btn btn-primary">Login</button> <button type="button" class="btn btn-default" ng-click="dismiss()">Cancel</button></div></div></form></div>'),a.put("signup.html",'<div class="row"><div class="col-sm-8 col-sm-offset-2"><h2><small>Sign up</small></h2></div></div><div class="row"><div class="col-sm-8 col-sm-offset-2"><div class="panel panel-default"><div class="panel-body"><form name="signupForm" class="form-horizontal" ng-submit="submit(signupForm, credentials)" novalidate><div class="form-group"><label for="email" class="control-label sr-only">Email Address</label><div class="col-sm-10 col-sm-offset-1"><input type="email" id="email" name="email" class="form-control" placeholder="Email address" ng-model="credentials.email" ch-validator="required email"></div></div><div class="form-group"><label for="password" class="control-label sr-only">Password</label><div class="col-sm-10 col-sm-offset-1"><input type="password" id="password" name="password" class="form-control" placeholder="Password" ng-model="credentials.password" ch-validator="required password"></div></div><div class="form-group"><label for="passwordConfirmation" class="control-label sr-only">Password Confirmation</label><div class="col-sm-10 col-sm-offset-1"><input type="password" id="passwordConfirmation" name="passwordConfirmation" class="form-control" placeholder="Re-enter Password" ng-model="passwordConfirmation" ch-validator="required password confirm:credentials.password"></div></div><div class="form-group"><div class="col-sm-10 col-sm-offset-1"><button type="submit" class="btn btn-primary">Signup</button> <a class="btn btn-link" ui-sref="main.public.login">Log in</a></div></div></form></div></div></div></div>')
}]),function(a){function b(a){a.signupUrl="/api/users",a.signupRedirect="/signup",a.loginOnSignup=!1,a.loginUrl="/api/sessions",a.loginRedirect="/feeds",a.logoutRedirect=null,a.tokenPrefix="nl",a.tokenName="token"}function c(a){a.setColors({success:"#259b24",error:"#e51c23",notice:"rgba(0, 0, 0, .87)",loading:"#4e6cef"})}var d,e,f;d=["ngTouch","ngSanitize","satellizer","ch.Snackbar","nl.Templates","nl.States","nl.Home","nl.Session","nl.Signup","nl.Feeds","nl.Account","nl.ActiveNav"],e=["$authProvider",b],f=["snackbarProvider",c],a.module("nl.Main",d).config(e).config(f)}(angular),function(a){function b(a,b,c){a.isAuthenticated=b.isAuthenticated,a.user=c}var c;c=["$scope","$auth","user",b],a.module("nl.Main").controller("mainController",c)}(angular);